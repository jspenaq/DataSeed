services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: DataSeed_DB
      POSTGRES_USER: DataSeed
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d DataSeed_DB -U DataSeed"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://DataSeed:dev_password@db/DataSeed_DB
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
    - ../app:/app/app
    - ../config:/app/config
    - ../dashboard:/app/dashboard
    - ../scripts:/app/scripts
    - ../.env:/app/.env

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: ["uv", "run", "celery", "-A", "app.workers.celery_app", "worker", "--loglevel=info"]
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db/dataseed_dev
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ../app:/app/app
      - ../config:/app/config
      - ../scripts:/app/scripts
      - ../.env:/app/.env

  dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: ["uv", "run", "streamlit", "run", "dashboard/main.py", "--server.address", "0.0.0.0"]
    ports:
      - "8501:8501"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql+asyncpg://DataSeed:dev_password@db/DataSeed_DB
    volumes:
    - ../dashboard:/app/dashboard
    - ../config:/app/config
    - ../.env:/app/.env

volumes:
  postgres_data: